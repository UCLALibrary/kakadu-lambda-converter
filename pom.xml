<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>edu.ucla.library</groupId>
  <artifactId>kakadu-lambda-converter</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  <name>Kakadu Lambda Converter</name>
  <description>A AWS Lambda function that converts TIFFs to JP2s using Kakadu</description>

  <licenses>
    <license>
      <name>The 3-Clause BSD License</name>
      <url>https://opensource.org/licenses/BSD-3-Clause</url>
    </license>
  </licenses>

  <scm>
    <connection>scm:git:git@github.com:uclalibrary/kakadu-lambda-converter.git</connection>
    <developerConnection>scm:git:git@github.com:uclalibrary/kakadu-lambda-converter.git</developerConnection>
    <url>git@github.com:uclalibrary/kakadu-lambda-converter.git</url>
  </scm>

  <issueManagement>
    <system>GitHub</system>
    <url>https://github.com/uclalibrary/kakadu-lambda-converter/issues</url>
  </issueManagement>

  <developers>
    <developer>
      <email>ksclarke@ksclarke.io</email>
      <name>Kevin S. Clarke</name>
      <roles>
        <role>developer</role>
      </roles>
      <timezone>America/New_York</timezone>
    </developer>
  </developers>

  <properties>
    <!-- These are the variables that can be set for the deployment/testing -->
    <!-- for the SUPPLY fields, please specify a unique name as terraform will create resources with the specified name -->
    <terraform.workspace.prefix>YOUR_USERNAME</terraform.workspace.prefix>
    <terraform.organization.name>YOUR_ORGANIZATION_NAME</terraform.organization.name>
    <terraform.user.token>SUPPLY-YOUR-OWN</terraform.user.token>
    <lambda.region>us-east-1</lambda.region>
    <lambda.cred.profile>kakadu-converter</lambda.cred.profile>
    <lambda.function.name>${terraform.workspace.prefix}-KakaduConverter</lambda.function.name>
    <src.s3.bucket>SUPPLY-SOURCEBUCKET-NAME</src.s3.bucket>
    <force.destroy.src.bucket>false</force.destroy.src.bucket>
    <jp2.s3.bucket>SUPPLY-JP2BUCKET-NAME</jp2.s3.bucket>
    <force.destroy.jp2.bucket>false</force.destroy.jp2.bucket>
    <kakadu.lib.layer.versioned.arn>SUPPLY-YOUR-OWN</kakadu.lib.layer.versioned.arn>
    <kakadu.bin.layer.versioned.arn>SUPPLY-YOUR-OWN</kakadu.bin.layer.versioned.arn>
    <src.bucket.notification.filter.suffix>.tif</src.bucket.notification.filter.suffix>
    <!-- Three things are sent to monitor: job name, image ID, and success; add curly braces to path for each -->
    <monitoring.endpoint>https://webhook.site/94998452-e729-48b7-a315-9d5aedffe648/{}/{}/{}</monitoring.endpoint>

    <!-- Versions of project dependencies -->
    <freelib.utils.version>0.8.10</freelib.utils.version>
    <lambda.logging.version>1.0.0</lambda.logging.version>
    <lambda.events.version>2.2.6</lambda.events.version>
    <lambda.core.version>1.2.0</lambda.core.version>
    <aws.sdk.version>1.11.534</aws.sdk.version>
    <jackson.version>2.10.0</jackson.version>
    <jackson.databind.version>2.10.0</jackson.databind.version>

    <!-- Versions of test dependencies -->
    <mockito.version>2.27.0</mockito.version>

    <!-- Versions of plug-ins -->
    <shade.plugin.version>3.0.0</shade.plugin.version>
    <codacy.plugin.version>1.0.2</codacy.plugin.version>

    <!-- Build configuration properties -->
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
  </properties>

  <dependencies>
    <dependency>
      <groupId>info.freelibrary</groupId>
      <artifactId>freelib-utils</artifactId>
      <version>${freelib.utils.version}</version>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-databind</artifactId>
      <version>${jackson.databind.version}</version>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-core</artifactId>
      <version>${jackson.version}</version>
    </dependency>
    <dependency>
      <groupId>io.symphonia</groupId>
      <artifactId>lambda-logging</artifactId>
      <version>${lambda.logging.version}</version>
      <classifier>no-config</classifier>
    </dependency>
    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-classic</artifactId>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>com.amazonaws</groupId>
      <artifactId>aws-lambda-java-core</artifactId>
      <version>${lambda.core.version}</version>
    </dependency>
    <dependency>
      <groupId>com.amazonaws</groupId>
      <artifactId>aws-lambda-java-events</artifactId>
      <version>${lambda.events.version}</version>
    </dependency>
    <dependency>
      <groupId>com.amazonaws</groupId>
      <artifactId>aws-java-sdk-s3</artifactId>
      <version>${aws.sdk.version}</version>
    </dependency>
    <dependency>
      <groupId>com.amazonaws</groupId>
      <artifactId>aws-java-sdk-lambda</artifactId>
      <version>${aws.sdk.version}</version>
    </dependency>

    <!-- Test dependencies -->
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-core</artifactId>
      <version>${mockito.version}</version>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <resources>
      <resource>
        <directory>src/main/resources</directory>
        <filtering>true</filtering>
      </resource>
    </resources>
    <plugins>
      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <configuration>
          <generatedSourcesDirectory>${project.basedir}/src/main/generated</generatedSourcesDirectory>
          <generatedTestSourcesDirectory>${project.basedir}/src/main/generated</generatedTestSourcesDirectory>
          <forceJavacCompilerUse>true</forceJavacCompilerUse>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-shade-plugin</artifactId>
        <version>${shade.plugin.version}</version>
        <configuration>
          <createDependencyReducedPom>false</createDependencyReducedPom>
          <transformers>
            <transformer
              implementation="org.apache.maven.plugins.shade.resource.ServicesResourceTransformer" />
          </transformers>
          <artifactSet>
            <excludes>
              <exclude>com.fasterxml.jackson.core:*</exclude>
            </excludes>
          </artifactSet>
        </configuration>
        <executions>
          <execution>
            <phase>package</phase>
            <goals>
              <goal>shade</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>info.freelibrary</groupId>
        <artifactId>freelib-utils</artifactId>
        <version>${freelib.utils.version}</version>
        <executions>
          <execution>
            <phase>process-resources</phase>
            <goals>
              <goal>generate-codes</goal>
            </goals>
            <configuration>
              <generatedSourcesDirectory>${project.basedir}/src/main/generated</generatedSourcesDirectory>
              <messageFiles>
                <messageFile>${project.basedir}/src/main/resources/kakadu-lambda-converter_messages.xml</messageFile>
              </messageFiles>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-javadoc-plugin</artifactId>
        <dependencies>
          <dependency>
            <groupId>info.freelibrary</groupId>
            <artifactId>freelib-resources</artifactId>
            <version>${freelib.resources.version}</version>
          </dependency>
        </dependencies>
        <configuration>
          <stylesheetfile>javadocs.css</stylesheetfile>
          <nonavbar>true</nonavbar>
          <show>public</show>
          <nosince>true</nosince>
          <notimestamp>true</notimestamp>
          <bottom>Â </bottom>
          <detectLinks>false</detectLinks>
          <additionalJOptions>
            <additionalJOption>-J-Dhttp.agent=maven-javadoc-plugin-${project.name}</additionalJOption>
          </additionalJOptions>
          <links>
          </links>
          <sourcepath>${project.basedir}/src/main/java:${project.basedir}/src/main/generated</sourcepath>
        </configuration>
        <executions>
          <execution>
            <id>site-javadocs</id>
            <phase>site</phase>
            <goals>
              <goal>javadoc</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-checkstyle-plugin</artifactId>
      </plugin>
      <plugin>
        <artifactId>maven-enforcer-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>com.gavinmogan</groupId>
        <artifactId>codacy-maven-plugin</artifactId>
        <version>${codacy.plugin.version}</version>
      </plugin>
      <plugin>
        <artifactId>maven-dependency-plugin</artifactId>
      </plugin>
      <plugin>
        <artifactId>maven-surefire-plugin</artifactId>
        <configuration>
          <environmentVariables>
            <DESTINATION_BUCKET>${jp2.s3.bucket}</DESTINATION_BUCKET>
            <AWS_REGION>${lambda.region}</AWS_REGION>
            <CI>true</CI>
          </environmentVariables>
          <argLine>${jacoco.agent.arg}</argLine>
        </configuration>
      </plugin>
    </plugins>
  </build>

  <!-- Enables pushing project documentation up to an S3 bucket TODO: configure for UCLA -->
  <distributionManagement>
    <site>
      <id>s3.site</id>
      <url>s3://projects.freelibrary.info/lambda-kakadu-converter</url>
    </site>
  </distributionManagement>

  <parent>
    <artifactId>freelib-parent</artifactId>
    <groupId>info.freelibrary</groupId>
    <version>3.7.0</version>
  </parent>

</project>
